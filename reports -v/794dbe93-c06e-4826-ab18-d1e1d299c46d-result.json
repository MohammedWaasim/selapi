{"name": "test_google_page_translation", "status": "broken", "statusDetails": {"message": "UnboundLocalError: local variable 'driver' referenced before assignment", "trace": "request = <SubRequest 'oneTimeEveryClassSetup' for <TestCaseFunction test_google_page_translation>>, browser = None\n\n    @pytest.fixture(scope=\"function\")\n    def oneTimeEveryClassSetup(request,browser):\n        print(\"Running for every class\")\n        config = configparser.ConfigParser()\n        config.read('properties.ini')\n        if request.cls is not None:\n            request.cls.ndtv_test_file = config['NDTVTest']['NdtvTestData']\n            request.cls.test_data_path=config['GoogleData']['test_data_path']\n            wdf = WebDriverFactory(browser)\n>           driver = wdf.getWebDriverInstance(crx_path=config['GoogleData']['crx_file_path'])\n\ntests/conftest.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <base.webdriverfactory.WebDriverFactory object at 0x7f8365dccc70>, crx_path = 'crx_repo/extension_2_0_9_0.crx'\n\n    def getWebDriverInstance(self,crx_path=None):\n        if self.browser==\"iexplorer\":\n            driver=webdriver.Ie()\n        elif self.browser==\"firefox\":\n            driver=webdriver.Firefox()\n        elif self.browser==\"chrome\":\n            options = Options()\n            options.add_argument(\"--disable-notifications\")\n            #chrome_path = \"/Users/mohammedwaasim/Documents/workspace_python/drivers/chromedriver\"\n            driver=webdriver.Chrome(ChromeDriverManager().install(),options=options)\n        elif self.browser==\"headless\":\n            options = Options()\n            options.headless=True\n            options.add_argument(\"--disable-notifications\")\n            driver = webdriver.Chrome(ChromeDriverManager().install(), chrome_options=options)\n        elif self.browser==\"chrome_with_ext\":\n            chop = webdriver.ChromeOptions()\n            chop.add_extension(crx_path)\n            driver = webdriver.Chrome(ChromeDriverManager().install(),options=chop)\n        else:\n            self.log.error(\"no such driver found driver not initiated\")\n    \n>       driver.implicitly_wait(5)\nE       UnboundLocalError: local variable 'driver' referenced before assignment\n\nbase/webdriverfactory.py:37: UnboundLocalError"}, "attachments": [{"name": "log", "source": "82e93964-a644-4755-b4ba-745400c2ee2e-attachment.txt", "type": "text/plain"}], "start": 1607411639581, "stop": 1607411639581, "uuid": "120dd666-7fa2-4f8c-9964-925b35d55ee0", "historyId": "f80a5a4e5f6ceebaa587357285a44270", "testCaseId": "07bb7d9f4cf2bbf3bb43edd6c647c182", "fullName": "tests.google_translate_test.Google_Translate#test_google_page_translation", "labels": [{"name": "tag", "value": "order(3)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('oneTimeEveryClassSetup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "google_translate_test"}, {"name": "subSuite", "value": "Google_Translate"}, {"name": "host", "value": "mohammeds-MacBook-Pro.local"}, {"name": "thread", "value": "30918-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.google_translate_test"}]}